@page
@model SkincareProductSalesSystem.Pages.Staff.Contents.IndexModel

@{
    ViewData["Title"] = "Content Management";
}

<style>
    .content-container {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        padding: 2rem;
        margin: 2rem auto;
        max-width: 1800px;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #f0f0f0;
    }

    .page-title {
        color: #FF6088;
        font-weight: 700;
        margin: 0;
    }

    .btn-create {
        background-color: #FF99B0;
        color: white;
        border: none;
        padding: 0.5rem 1.2rem;
        border-radius: 20px;
        text-decoration: none;
        font-weight: 500;
    }

    .btn-create:hover {
        background-color: #FF6088;
        color: white;
    }

    .content-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .content-table th {
        background-color: #FFF0F3;
        color: #555;
        font-weight: 600;
        padding: 0.75rem;
        text-align: left;
    }

    .content-table td {
        padding: 0.75rem;
        border-bottom: 1px solid #f0f0f0;
        vertical-align: middle;
    }

    .content-table tr:last-child td {
        border-bottom: none;
    }

    .truncate {
        max-width: 200px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-published {
        background-color: #e6f7ee;
        color: #28a745;
    }

    .status-draft {
        background-color: #f2f2f2;
        color: #6c757d;
    }

    .action-links a {
        color: #FF99B0;
        margin-right: 10px;
        text-decoration: none;
    }

    .action-links a:hover {
        color: #FF6088;
        text-decoration: underline;
    }

    .btn-action {
        padding: 0.4rem 0.75rem;
        margin: 0 0.2rem;
        border-radius: 5px;
        color: white;
        font-size: 0.85rem;
        font-weight: 500;
        transition: all 0.2s;
        text-decoration: none;
        display: inline-block;
    }

    .btn-edit {
        background-color: #6EA8FF;
    }

    .btn-edit:hover {
        background-color: #407BFF;
        color: white;
    }

    .btn-details {
        background-color: #6c757d;
    }

    .btn-details:hover {
        background-color: #5a6268;
        color: white;
    }

    .btn-delete {
        background-color: #FF7B7B;
    }

    .btn-delete:hover {
        background-color: #FF5252;
        color: white;
    }
</style>

<div class="container content-container">
    <div class="page-header">
        <h2 class="page-title">Content Management</h2>
        <a asp-page="Create" class="btn-create">Add New Content</a>
    </div>

    <div class="table-responsive">
        <table class="content-table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Type</th>
                    <th>Content</th>
                    <th>Status</th>
                    <th>Published</th>
                    <th>Created</th>
                    <th>Author</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Content)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.ContentType)</td>
                        <td class="truncate">@Html.DisplayFor(modelItem => item.Content1)</td>
                        <td>
                            @if (item.IsPublished.HasValue && item.IsPublished.Value)
                            {
                                <span class="status-badge status-published">Published</span>
                            }
                            else
                            {
                                <span class="status-badge status-draft">Draft</span>
                            }
                        </td>
                        <td>
                            @if (item.PublishedAt.HasValue)
                            {
                                @item.PublishedAt.Value.ToString("MMM dd, yyyy")
                            }
                            else
                            {
                                <span>-</span>
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                        <td>@Html.DisplayFor(modelItem => item.Author.Email)</td>
                        <td class="actions-cell">
                            <a asp-page="./Edit" asp-route-id="@item.Id" class="btn-action btn-edit">
                                <i class="bi bi-pencil-square"></i> Edit
                            </a>
                            <a asp-page="./Details" asp-route-id="@item.Id" class="btn-action btn-details">
                                <i class="bi bi-info-circle"></i> Details
                            </a>
                            <a asp-page="./Delete" asp-route-id="@item.Id" class="btn-action btn-delete">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (!Model.Content.Any())
    {
        <div class="text-center mt-4">
            <p class="text-muted">No content items found.</p>
        </div>
    }
</div>
