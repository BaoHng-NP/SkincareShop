@page
@model SkincareProductSalesSystem.Pages.Staff.Categories.IndexModel

@{
    ViewData["Title"] = "Manage Categories";
}

<style>
    .category-container {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        padding: 2rem;
        margin: 2rem auto;
        max-width: 1000px;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #f0f0f0;
    }

    .page-title {
        color: #FF6088;
        font-weight: 700;
        margin: 0;
    }

    .btn-add {
        background-color: #FF99B0;
        color: white;
        border: none;
        padding: 0.5rem 1.2rem;
        border-radius: 25px;
        font-weight: 600;
        display: flex;
        align-items: center;
        transition: all 0.3s;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    }

    .btn-add:hover {
        background-color: #FF6088;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
        color: white;
    }

    .categories-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .categories-table th {
        background-color: #FFF0F3;
        color: #FF6088;
        font-weight: 600;
        padding: 1rem;
        text-align: left;
    }

    .categories-table th:first-child {
        border-top-left-radius: 10px;
    }

    .categories-table th:last-child {
        border-top-right-radius: 10px;
        text-align: center;
    }

    .categories-table td {
        padding: 1rem;
        border-bottom: 1px solid #f0f0f0;
        vertical-align: middle;
    }

    .categories-table tr:last-child td {
        border-bottom: none;
    }

    .categories-table tr:hover {
        background-color: #FFF9FA;
    }

    .actions-cell {
        text-align: center;
        white-space: nowrap;
    }

    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-active {
        background-color: #E6F8F0;
        color: #28a745;
    }

    .status-inactive {
        background-color: #F8F0F0;
        color: #dc3545;
    }

    .btn-action {
        padding: 0.4rem 0.75rem;
        margin: 0 0.2rem;
        border-radius: 5px;
        color: white;
        font-size: 0.85rem;
        font-weight: 500;
        transition: all 0.2s;
        text-decoration: none;
        display: inline-block;
    }

    .btn-edit {
        background-color: #6EA8FF;
    }

    .btn-edit:hover {
        background-color: #407BFF;
        color: white;
    }

    .btn-details {
        background-color: #6c757d;
    }

    .btn-details:hover {
        background-color: #5a6268;
        color: white;
    }

    .btn-delete {
        background-color: #FF7B7B;
    }

    .btn-delete:hover {
        background-color: #FF5252;
        color: white;
    }

    .description-cell {
        max-width: 300px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .search-box {
        position: relative;
        margin-bottom: 1.5rem;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 3rem;
        border: 1px solid #e0e0e0;
        border-radius: 30px;
        font-size: 1rem;
        transition: all 0.3s;
    }

    .search-input:focus {
        border-color: #FF99B0;
        box-shadow: 0 0 0 0.2rem rgba(255, 153, 176, 0.25);
        outline: none;
    }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #999;
    }

    /* Empty state */
    .empty-state {
        text-align: center;
        padding: 3rem 0;
    }

    .empty-icon {
        font-size: 4rem;
        color: #d1d1d1;
        margin-bottom: 1rem;
    }

    .empty-text {
        color: #888;
        font-size: 1.1rem;
        margin-bottom: 1.5rem;
    }
</style>

<div class="container category-container">
    <div class="page-header">
        <h2 class="page-title">Category Management</h2>
        <a asp-page="Create" class="btn btn-add">
            <i class="bi bi-plus-circle me-2"></i> Add New Category
        </a>
    </div>

    <div class="search-box">
        <i class="bi bi-search search-icon"></i>
        <input type="text" id="categorySearch" class="search-input" placeholder="Search categories...">
    </div>

    @if (Model.Category.Any())
    {
        <table class="categories-table" id="categoriesTable">
            <thead>
                <tr>
                    <th>Category Name</th>
                    <th>Status</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Category)
                {
                    <tr>
                        <td>
                            <strong>@item.Name</strong>
                        </td>
                        <td>
                            @if (item.IsActive)
                            {
                                <span class="status-badge status-active">Active</span>
                            }
                            else
                            {
                                <span class="status-badge status-inactive">Inactive</span>
                            }
                        </td>
                        <td class="description-cell" title="@item.Description">
                            @item.Description
                        </td>
                        <td class="actions-cell">
                            <a asp-page="./Edit" asp-route-id="@item.Id" class="btn-action btn-edit">
                                <i class="bi bi-pencil-square"></i> Edit
                            </a>
                            <a asp-page="./Details" asp-route-id="@item.Id" class="btn-action btn-details">
                                <i class="bi bi-info-circle"></i> Details
                            </a>
                            <a asp-page="./Delete" asp-route-id="@item.Id" class="btn-action btn-delete">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="bi bi-folder-x"></i>
            </div>
            <p class="empty-text">No categories found. Get started by adding a new category.</p>
            <a asp-page="Create" class="btn btn-add">
                <i class="bi bi-plus-circle me-2"></i> Add First Category
            </a>
        </div>
    }
</div>

<script>
    // Search functionality
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('categorySearch');

        if (searchInput) {
            searchInput.addEventListener('keyup', function () {
                const searchValue = this.value.toLowerCase();
                const table = document.getElementById('categoriesTable');
                if (!table) return;

                const rows = table.getElementsByTagName('tr');

                for (let i = 1; i < rows.length; i++) {
                    const nameCell = rows[i].getElementsByTagName('td')[0];
                    const descriptionCell = rows[i].getElementsByTagName('td')[2];

                    if (nameCell && descriptionCell) {
                        const nameText = nameCell.textContent || nameCell.innerText;
                        const descriptionText = descriptionCell.textContent || descriptionCell.innerText;

                        if (nameText.toLowerCase().indexOf(searchValue) > -1 ||
                            descriptionText.toLowerCase().indexOf(searchValue) > -1) {
                            rows[i].style.display = "";
                        } else {
                            rows[i].style.display = "none";
                        }
                    }
                }
            });
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        const descriptions = document.querySelectorAll('.description-cell');
        descriptions.forEach(desc => {
            desc.addEventListener('mouseenter', function () {
                if (this.offsetWidth < this.scrollWidth) {
                    this.setAttribute('title', this.textContent);
                } else {
                    this.removeAttribute('title');
                }
            });
        });
    });
</script>
